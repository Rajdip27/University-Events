@using Microsoft.AspNetCore.Identity
@using static UniversityEvents.Core.Entities.Auth.IdentityModel
@inject SignInManager<User> SignInManager
@model UniversityEvents.Application.ViewModel.Auth.LoginViewModel
@{
    Layout = null;
    var externalProviders = await SignInManager.GetExternalAuthenticationSchemesAsync();
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login | University Events</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
</head>
<body class="bg-gradient-to-br from-gray-700 to-gray-900 min-h-screen flex items-center justify-center font-sans">
    <div class="w-full max-w-md bg-white rounded-2xl shadow-2xl p-8 animate-fadeIn">
        <h2 class="text-3xl font-bold text-center text-gray-800 mb-6">Welcome Back</h2>

        <!-- Login Form -->
        <form asp-action="Login" method="post" class="space-y-5">
            <!-- FIX: Ensure ReturnUrl always has a value -->
            <input type="hidden" asp-for="ReturnUrl" value="@(Model.ReturnUrl ?? "/Dashboard")" />

           @*  <div asp-validation-summary="All" class="bg-red-50 text-red-600 text-sm rounded p-2"></div> *@

            <div>
                <label asp-for="Email" class="block text-gray-700 font-medium mb-1"></label>
                <input asp-for="Email" placeholder="Enter your email"
                       class="form-input w-full p-3 rounded-lg border-2 border-gray-200 focus:border-blue-500 focus:ring focus:ring-blue-200 outline-none transition" />
                <span asp-validation-for="Email" class="text-red-500 text-sm"></span>
            </div>

            <div>
                <label asp-for="Password" class="block text-gray-700 font-medium mb-1"></label>
                <div class="relative">
                    <input asp-for="Password" placeholder="Enter your password" type="password"
                           class="form-input w-full p-3 rounded-lg border-2 border-gray-200 focus:border-blue-500 focus:ring focus:ring-blue-200 outline-none transition" id="passwordField" />
                    <button type="button" class="absolute right-3 top-3 text-gray-500 hover:text-gray-700" onclick="togglePassword()">
                        <i class="fa fa-eye" id="toggleIcon"></i>
                    </button>
                </div>
                <span asp-validation-for="Password" class="text-red-500 text-sm"></span>
            </div>

            <button type="submit" class="w-full py-3 bg-blue-600 hover:bg-blue-700 text-white font-semibold rounded-lg shadow-lg transition">
                Sign In
            </button>

            <div class="flex justify-between text-sm text-gray-600 mt-3">
                <a href="/Account/ForgotPassword" class="hover:text-blue-600">Forgot Password?</a>
                <a href="/Account/Signup" class="hover:text-blue-600">Create an account</a>
            </div>
        </form>

        <!-- External Login Providers -->
        @if (externalProviders.Any())
        {
            <div class="mt-6">
                <p class="text-center text-gray-500 mb-3">Or continue with</p>
                <div class="flex gap-3">
                    @foreach (var provider in externalProviders)
                    {
                        <form asp-controller="Account" asp-action="ExternalLogin" method="post" class="flex-1">
                            <input type="hidden" name="provider" value="@provider.Name" />
                            <!-- FIX: Ensure ReturnUrl has fallback -->
                            <input type="hidden" name="returnUrl" value="@(Model.ReturnUrl ?? "/Dashboard")" />
                            <button type="submit"
                                    class="w-full py-2 rounded-lg flex items-center justify-center gap-2 font-medium transition
                                                @(provider.Name.ToLower().Contains("google") ? "border border-red-500 text-red-600 hover:bg-red-500 hover:text-white"
                                                                                                        : provider.Name.ToLower().Contains("facebook") ? "border border-blue-600 text-blue-600 hover:bg-blue-600 hover:text-white"
                                                                                                        : "border border-gray-400 text-gray-600 hover:bg-gray-600 hover:text-white")">
                                @if (provider.Name.ToLower().Contains("google"))
                                {
                                    <i class="fab fa-google"></i>
                                }
                                else if (provider.Name.ToLower().Contains("facebook"))
                                {
                                    <i class="fab fa-facebook-f"></i>
                                }
                                @provider.DisplayName
                            </button>
                        </form>
                    }
                </div>
            </div>
        }
    </div>

    <script>
        function togglePassword() {
            const field = document.getElementById("passwordField");
            const icon = document.getElementById("toggleIcon");
            if (field.type === "password") {
                field.type = "text";
                icon.classList.remove("fa-eye");
                icon.classList.add("fa-eye-slash");
            } else {
                field.type = "password";
                icon.classList.remove("fa-eye-slash");
                icon.classList.add("fa-eye");
            }
        }
    </script>
</body>
</html>
